access_log /dev/stdout;
error_log /dev/stdout debug;

# Reverse proxy to JWT Block auth proxy.
server {
  listen       80;
  server_name  jwtblock.localhost;

  location / {
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    proxy_pass http://jwtblock:4474/;
  }
}

# Reverse proxy to Keycloak identity provider.
server {
  listen       80;
  server_name  keycloak.localhost;

  location / {
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    # Handle CORS/preflight requests.
    proxy_hide_header Access-Control-Allow-Origin;
    add_header Access-Control-Allow-Origin  *  always;
    add_header Access-Control-Allow-Credentials  true  always;
    add_header Access-Control-Allow-Methods  GET,POST,OPTIONS,PUT,DELETE,PATCH;
    add_header Access-Control-Allow-Headers  Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range  always;
    if ($request_method = 'OPTIONS') {
      return 204;
      break;
    }

    proxy_pass http://keycloak:8080/;
  }
}

# Reverse proxy to static JS UI app.
server {
  listen      80;
  server_name ui-app.localhost;

  location / {
    autoindex on;
    root  /usr/share/nginx/ui-app;
  }

  location /oauth2/callback {
    rewrite ^/oauth2/callback$ /oauth2-callback.html;
  }

}

# Reverse proxy to protected httpbin traditional web site.
server {
  listen      80;
  server_name site.localhost;

  location / {
    proxy_pass http://httpbin/;
  }

  # A placeholder path to defer auth decisions to JWT Block.
  location /jwtblock/ {
    internal;

    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    proxy_pass http://jwtblock:4474/;
  }
  # https://nginx.org/en/docs/http/ngx_http_auth_request_module.html
  auth_request /jwtblock/blocklist/check;

  # The redirect on 401 responses.
  error_page 401 = http://keycloak.localhost;

}

# Reverse proxy to protected httpbin web API.
server {
  listen      80;
  server_name api.localhost;

  location / {

    proxy_pass http://httpbin/;

    # Handle CORS/preflight requests.
    proxy_hide_header Access-Control-Allow-Origin;
    add_header Access-Control-Allow-Origin  *  always;
    add_header Access-Control-Allow-Credentials  true  always;
    add_header Access-Control-Allow-Methods  GET,POST,OPTIONS,PUT,DELETE,PATCH;
    add_header Access-Control-Allow-Headers  Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range  always;
    if ($request_method = 'OPTIONS') {
      return 204;
      break;
    }
  }

  # A placeholder path to defer auth decisions to JWT Block.
  location /jwtblock/ {
    internal;

    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_pass_request_body     off;

    proxy_pass http://jwtblock:4474/;
  }
  # https://nginx.org/en/docs/http/ngx_http_auth_request_module.html
  auth_request /jwtblock/blocklist/check;

}
